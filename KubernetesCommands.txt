    #The command to get all the nodes in the cluster
kubectl get nodes
#The commamd to get the cluster information including the ipadress or FQDN of master node
# and the services running on it
kubectl cluster-info
#To get component status
kubectl get cs
#To scale existing rc for the replice counts
kubectl scale rc <rcName> --replicas=<replicaCount>
#To ssh to VM which is running the kubernetes applicable for Minikube Password is tcuser
ssh docker@<masterNodeIPAddress>
#The below command pushes the docker-env variables of minikube to your system bash
#and thus any docker build / images/ containers will be installed in that environments
eval $(minikube docker-env)
kubectl config current-context // display the current context
kubectl config use-context
kubectl apply --filename <addon> //install the addon 
kubectl get pods --all-namespaces --watch
kubectl get nodes
#Used to list the token on the master node
kubeadm token list 
#Used to create a new token
kubeadm token create
#Create a nginx pod without having definition file
kubectl run --generator=run-pod/v1 nginx --image=nginx
#Generate POD Manifest YAML file (-o yaml). Don't create it(--dry-run)#
kubectl run --generator=run-pod/v1 nginx --image=nginx --dry-run -o yaml
#Creates a deployment
kubectl run --generator=deployment/v1beta1 nginx --image=nginx
kubectl create deployment --image=nginx nginx
#Generate Deployment YAML file (-o yaml). Don't create it(--dry-run)
kubectl run --generator=deployment/v1beta1 nginx --image=nginx --dry-run -o yaml
kubectl create deployment --image=nginx nginx --dry-run -o yaml
#Generate Deployment YAML file (-o yaml). Don't create it(--dry-run) with 4 Replicas (--replicas=4)
kubectl run --generator=deployment/v1beta1 nginx --image=nginx --dry-run --replicas=4 -o yaml
#Save it to a file - (If you need to modify or add some other details)
kubectl run --generator=deployment/v1beta1 nginx --image=nginx --dry-run --replicas=4 -o yaml > nginx-deployment.yaml








 

